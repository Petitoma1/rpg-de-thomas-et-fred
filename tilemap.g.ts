// Code généré automatiquement. Ne pas modifier.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "niveau3":
            case "niveau3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau4":
            case "niveau4":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau2":
            case "niveau2":return tiles.createTilemap(hex`0800080002020202030202020202020202020202020202020202020202020202020202020102020202020202020202020202020202020202020202020202020202020202`, img`
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.dungeon.floorLight0,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "niveau6":
            case "niveau6":return tiles.createTilemap(hex`0800080001010101030101010101010101010101010101010101010101010101010101010201010101010101010101010101010101010101010101010101010101010101`, img`
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
. . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "mapmonde":
            case "niveau1":return tiles.createTilemap(hex`20002000010105070601010101010101010101010101040404040404040404040404040401010507070909090909090909090909090919191919191919191919191804040101050707070707071d0707070707070707070707071d0707070707071b04040101050707070a0a0a0a0a0a0a0a0a1a1a1a1a1a1a1a1a1a1a1a0707071b040401010507070801010101010101010104040404040404040404041707071b04040101050706010101010101010101010104040404040404040404041c071b0404010105070601011e1e1e1e1e01010101040404041e1e1e1e1e04041c071b0404010105070601011e1e1e1e1e01010101010404041e1e1e1e1e04041c071b04040101051d06011f1e1e1e1e1e01010101010104041e1e1e1e1e20041c1d1b0404010105070601011e1e1e1e1e01010101010104041e1e1e1e1e04041c071b0404010105070601011e1e1e1e1e01010101010404041e1e1e1e1e04041c071b04040101050706010101010101010101010104040404040404040404041c071b04040101050706010101010101230101010404040404040404040404041c071b04040101050706010101010101010101010104040404040404040404041c071503030101050706010101010102010101020204040303030404040404041c07150303010105070601010101020202010102020403030303030404040403160715030301020f070e02010102020202020202020202030303030304040303160715030301020f070e02010102020202020202020202030303030304040303160715030302020f070e02020202020202020202020302030303030304030303160715030302020f070e02021e1e1e1e1e020202030303031e1e1e1e1e030303160715030302020f070e02021e1e1e1e1e020203030303031e1e1e1e1e030303160715030302020f1d0e02211e1e1e1e1e020203030303031e1e1e1e1e220303160715030302020f070e02021e1e1e1e1e020202030303031e1e1e1e1e030303161d15030302020f070e02021e1e1e1e1e020202030303031e1e1e1e1e030303160715030302020f070e02020202020202020202020303030303030303030303160715030302020f070e02020202020202020202020202030303030303030303160715030302020f070710020202020202020202020203030303030303030311070715030302020f0707070d0d0d0d0d0d0d0d0d0d0d12121212121212121207070715030302020f070707070707071d07070707070707070707071d07070707070715030302020b0c0c0c0c0c0c0c0c0c0c0c14141414141414141414141414141413030302020202020202020202020202020303030303030303030303030303030303030202020202020202020202020202020303030303030303030303030303030303`, img`
................................
................................
................................
................................
................................
................................
.......22222........22222.......
.......22222........22222.......
.......22222........22222.......
.......22222........22222.......
.......22222........22222.......
................................
................................
................................
................................
................................
................................
................................
................................
.......22222.......22222........
.......22222.......22222........
.......22222.......22222........
.......22222.......22222........
.......22222.......22222........
................................
................................
................................
................................
................................
................................
................................
................................
`, [myTiles.transparency16,sprites.castle.tileGrass1,myTiles.tile2,myTiles.tile3,myTiles.tile4,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.castle.tilePath5,sprites.castle.tilePath9,sprites.castle.tilePath2,sprites.castle.tilePath8,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile6,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23,myTiles.tile5,sprites.dungeon.floorLight2,sprites.dungeon.doorOpenEast,sprites.dungeon.doorOpenWest,sprites.dungeon.doorClosedEast,sprites.dungeon.doorClosedWest,sprites.swamp.swampTile0], TileScale.Sixteen);
            case "niveau10":
            case "niveau10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau5":
            case "niveau5":return tiles.createTilemap(hex`100010001a1a1b1c1d1a1a1a1a1a1a1a1a1a1a1a1a1a1b1c1c1e1e1e1e1e1e1e1e1e1e1e1a1a1b1c1c1c1c1c1c051c1c1c1c1c1c1a1a1b1c1c1c202020202020202020151a1a1b1c1c1f1a1a1a1a1a1a1a1a1a031a1a1b1c1d1a1a1a1a1a1a1a1a1a1a1a1a1a1b1c1d1a1a23232323231a1a1a1a1a1a1b1c1d1a1a23232323231a1a1a1a1a1a1b051d1a2123232323231a1a1a1a1a1a1b1c1d1a1a23232323231a1a1a1a1a1a1b1c1d1a1a23232323231a1a1a1a1a1a1b1c1d1a1a1a1a1a1a1a1a1a1a1a1a1a1b1c1d1a1a1a1a1a1a241a1a1a031a1a1b1c1d1a1a1a1a1a1a1a1a1a1a1a1a1a1b1c1d1a1a1a1a1a011a1a1a01011a1a1b1c1d1a1a1a1a0101011a1a0101`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile4,myTiles.tile5,myTiles.tile21,sprites.castle.tileGrass1,sprites.castle.tilePath4,sprites.castle.tilePath5,sprites.castle.tilePath6,sprites.castle.tilePath2,sprites.castle.tilePath9,sprites.castle.tilePath8,sprites.dungeon.doorOpenEast,sprites.dungeon.floorLight2,sprites.swamp.swampTile0], TileScale.Sixteen);
            case "niveau11":
            case "niveau11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau12":
            case "niveau12":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau8":
            case "niveau8":return tiles.createTilemap(hex``, img`
................................
................................
................................
................................
................................
............................2222
................................
................................
................................
................................
................................
................................
................................
................................
................................
22222222222222.......22222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles21,sprites.builtin.forestTiles22,sprites.swamp.swampTile3,sprites.swamp.swampTile1,sprites.swamp.swampTile2,sprites.swamp.swampTile13,sprites.dungeon.collectibleInsignia,sprites.builtin.forestTiles23,myTiles.tile24], TileScale.Sixteen);
            case "niveau0":
            case "niveau7":return tiles.createTilemap(hex``, img`
................................
................................
................................
................................
................................
............................2222
................................
................................
................................
................................
................................
................................
................................
................................
................................
22222222222222.......22222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles21,sprites.builtin.forestTiles22,sprites.builtin.forestTiles23,sprites.swamp.swampTile3,sprites.swamp.swampTile1,sprites.swamp.swampTile2,sprites.swamp.swampTile13,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "niveau13":
            case "niveau13":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau14":
            case "niveau14":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau9":
            case "niveau9":return tiles.createTilemap(hex`1e001900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002010103000000000002010101030000000000000000000700000000020305040406020101010105040404060101010101010101010101010103`, img`
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..............................
..2222.....22222..............
222222222222222222222222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles2,sprites.builtin.forestTiles1,sprites.builtin.forestTiles3,sprites.builtin.forestTiles28,sprites.builtin.forestTiles24,sprites.builtin.forestTiles29,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile0":
            case "tile2":return tile2;
            case "Gazon poison":
            case "tile3":return tile3;
            case "Désert":
            case "tile4":return tile4;
            case "myTile":
            case "tile1":return tile1;
            case "myTile1":
            case "tile5":return tile5;
            case "myTile3":
            case "tile7":return tile7;
            case "myTile4":
            case "tile8":return tile8;
            case "myTile5":
            case "tile9":return tile9;
            case "myTile6":
            case "tile10":return tile10;
            case "myTile7":
            case "tile11":return tile11;
            case "myTile8":
            case "tile12":return tile12;
            case "myTile2":
            case "tile6":return tile6;
            case "myTile9":
            case "tile13":return tile13;
            case "myTile10":
            case "tile14":return tile14;
            case "myTile11":
            case "tile15":return tile15;
            case "myTile12":
            case "tile16":return tile16;
            case "myTile13":
            case "tile17":return tile17;
            case "myTile14":
            case "tile18":return tile18;
            case "myTile15":
            case "tile19":return tile19;
            case "myTile16":
            case "tile20":return tile20;
            case "myTile17":
            case "tile21":return tile21;
            case "myTile18":
            case "tile22":return tile22;
            case "myTile19":
            case "tile23":return tile23;
            case "myTile20":
            case "tile24":return tile24;
            case "myTile21":
            case "tile25":return tile25;
        }
        return null;
    })

}
// Code généré automatiquement. Ne pas modifier.
